
/*--------------------------------------------*/
/* MyStatus shows analog and other values ... */
/*--------------------------------------------*/

FUNC void MyStatus (void)  {
  printf ("=============================\n");
  printf (" Analog-Input-0:  %f\n", ain0);
  printf (" Analog-Input-1:  %f\n", ain1);
  printf (" Analog-Input-2:  %f\n", ain2);
  printf (" Analog-Input-3:  %f\n", ain3);
  printf (" Registers (LR):  %08lXH\n", LR);
  printf (" Program Counter: %08lXH\n", $);
  printf ("=============================\n");
}

/*-------------------------------------------*/
/* Function MyRegs() shows Registers R0...R7 */
/*-------------------------------------------*/

FUNC void MyRegs (void)  {
  printf ("------------- MyRegs() --------------\n");
  printf ("  R4       R8       R9       R10\n");
  printf (" %08lX %08lX %08lX %08lX\n", R4, R8, R9, R10);
  printf ("------------------------------------\n");
}

/*-----------------------------------------------*/
/* Analog0() simulates analog input values given */
/*  to channel-0 (AIN0) of the ARM  derivative   */
/*-----------------------------------------------*/
Signal void analog0 (float limit)  {
  float volts;

  printf ("Analog0 (%f) entered.\n", limit);
  while (1)  {          /* forever */
    volts = 0;
    while (volts <= limit)  {
      ain0 = volts;     /* analog input-0 */
      twatch (100000);  /* 100000 Cycles Time-Break */
      volts += 0.01;    /* increase voltage */
    }
    volts = limit;
    while (volts >= 0.0)  {
      ain0 = volts;
      twatch (100000);  /* 100000 Cycles Time-Break */
      volts -= 0.01;    /* decrease voltage */
    }
  }
}


